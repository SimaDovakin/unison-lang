on:
  workflow_call:
    inputs:
      ref:
        description: Git ref to check out for this build, e.g. `trunk` or `release/0.5.19`
        type: string
        required: true
      stack-cache-prefix:
        description: The Stack cache prefix to use for builds
        type: string
        default: release

defaults:
  run:
    shell: bash

jobs:
  build-ucm:
    name: bundle ucm+ui ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-12, windows-2019]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/${{inputs.version}}

      - name: restore stack caches
        uses: ./.github/workflows/actions/restore-stack-cache
        with:
          cache-prefix: release

      - name: install stack
        uses: ./.github/workflows/actions/install-stack

      - name: build
        run: |
          # unison-cli embeds version numbers using TH
          # so it needs to be forced to rebuild to ensure those are updated.
          stack clean unison-cli

          # Windows will crash on build intermittently because the filesystem
          # sucks at managing concurrent file access;
          # Just keep retrying on these failures.
          tries=5
          for (( i = 0; i < $tries; i++ )); do
              stack --no-terminal build --flag unison-parser-typechecker:optimized && break;
          done

      - name: save stack caches
        uses: ./.github/workflows/actions/save-stack-cache
        with:
          cache-prefix: release

      - name: set up environment
        run: |
          if [[ ${{runner.os}} = 'Windows' ]]; then
            artifact_os="windows"
          elif [[ ${{runner.os}} = 'macOS' ]]; then
            artifact_os="osx"
          elif [[ ${{runner.os}} = 'Linux' ]]; then
            artifact_os="linux"
          else
            echo "Unexpected OS: ${{runner.os}}"
            exit 1
          fi
          echo "artifact_os=$artifact_os" >> $GITHUB_ENV

      - name: fetch latest Unison Local UI and package with ucm
        run: |
          mkdir /tmp/ucm
          cp -v $(stack exec -- which unison) /tmp/ucm/ucm

          curl -L -o /tmp/unisonLocal.zip \
            https://github.com/unisonweb/unison-local-ui/releases/download/latest/unisonLocal.zip
          mkdir /tmp/ucm/ui
          unzip -d /tmp/ucm/ui /tmp/unisonLocal.zip

          if [[ ${{runner.os}} = 'Windows' ]]; then
            artifact_archive=ucm-${{env.artifact_os}}.zip
            7z a -r -tzip ${artifact_archive} /tmp/ucm/*
          else
            artifact_archive=ucm-${{env.artifact_os}}.tar.gz
            tar -c -z -f ${artifact_archive} -C /tmp/ucm .
          fi
          echo "artifact_archive=${artifact_archive}" >> $GITHUB_ENV

      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-${{env.artifact_os}}
          path: ${{env.artifact_archive}}
