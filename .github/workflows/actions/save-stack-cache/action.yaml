name: save stack cache
description: save ~/.stack and .stack-work caches on Linux, macOS, and Windows

inputs:
  cache-prefix:
    description: The cache prefix to use for `~/.stack`, e.g. "release" or "ci"
    required: true
  work-cache-prefix:
    description: The cache prefix to use for `**/.stack-work`, e.g. "release" or "ci"
    required: false


runs:
  using: composite
  steps:
    - name: set default work cache prefix
      shell: bash
      run: |
        if [ -z "${{inputs.work-cache-prefix}}" ]; then
          echo "work-cache-prefix=${{inputs.cache-prefix}}" >> "$GITHUB_ENV"
        else
          echo "work-cache-prefix=${{inputs.work-cache-prefix}}" >> "$GITHUB_ENV"
        fi

    - name: check stack caches
      id: check-stack
      uses: ./.github/workflows/actions/restore-stack-cache
      with:
        cache-prefix: ${{inputs.cache-prefix}}
        work-cache-prefix: ${{env.work-cache-prefix}}
        lookup-only: true

    - name: save ~/.stack (non-Windows)
      if: runner.os != 'Windows' && steps.check-stack.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ~/.stack
        key: ${{inputs.cache-prefix}}-stack-${{runner.os}}_${{env.resolver}}-${{hashFiles('**/stack.yaml', '**/package.yaml')}}

    - name: save ~/.stack (Windows)
      if: runner.os == 'Windows' && steps.check-stack.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          C:\Users\runneradmin\AppData\Roaming\stack
          C:\Users\runneradmin\AppData\Local\Programs\stack
        key: ${{inputs.cache-prefix}}-stack-${{runner.os}}_${{env.resolver}}-${{hashFiles('**/stack.yaml', '**/package.yaml')}}

    - name: save .stack-work
      if: steps.check-stack.outputs.work-cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          **/.stack-work
        key: ${{env.work-cache-prefix}}-stack-work-${{runner.os}}_${{env.resolver}}-${{hashFiles('**/stack.yaml', '**/package.yaml')}}-${{hashFiles('**/*.hs')}}
